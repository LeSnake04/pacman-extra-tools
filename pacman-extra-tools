#!/usr/bin/bash

if [ -f /usr/bin/tput ]; then
   #Basic set of tput commands
   #formating
   TPUTBOLD="$(tput bold)" # bold
   TPUTDIM="$(tput dim)" # 
   TPUTRESET="$(tput sgr 0)" # default format 
   TPUTITALIC="$(tput sitm)" # italic
   TPUTBLINK="$(tput sitm)" # blink
   TPUTLIGHT="$(tput smso)" # Color becomes background color
   #colors
   TPUTGREEN="$(tput setaf 2)" # green
   TPUTRED="$(tput setaf 1)" # red
   TPUTBLUE="$(tput setaf 6)" # blue
   TPUTGREY="$(tput setaf 241)" # grey

   #tput presets 
   USERINPUTTPUT="${TPUTRESET}${TPUTGREEN}${TPUTBOLD}" #user inputs
   LOGTPUT="${TPUTRESET}${TPUTGREY}${TPUTITALIC} " #advanced logging 
   ERRORTPUT="${TPUTRESET}${TPUTBOLD}${TPUTRED} " #errors
   INFOTPUT="${TPUTRESET}${TPUTBLUE}" #logging 
   INFOTPUTBOLD="${TPUTRESET}${TPUTBLUE}${TPUTBOLD}" #logging
fi

help(){
echo "$INFOTPUT
This script gives you an easy way to use useful pacman abilities not directly provided by pacman options.

$INFOTPUTBOLD
h , --help${INFOTPUT}
  Shows help and quits
$INFOTPUTBOLD
-I , --info${INFOTPUT}
  Shows commands used by script. Useful if you want to learn more about Pacman :)
$INFOTPUTBOLD
-a , --autoremove${INFOTPUT}
  Remove unessesary packages
$INFOTPUTBOLD
-r , --remove {Search Term}${INFOTPUT}
  Remove all packages matching a term

  Examples: 
    $0 --remove python2
  If you only want to remove packages beginning with the term:
    $0 --remove ^python2
$INFOTPUTBOLD
-i , --install {Search Term}${INFOTPUT}
  Install all packages matching a term
    
  Examples:
    $0 --install xfce4
  If you only want to remove packages beginning with the term:
    $0 --install ^xfce4

You can use multiple operations at once

$LOGTPUT
If you do not need wildcard for installing or removing packages, I strongly recommend using pacman or your prefered pacman wrapper instead (I personally use 'paru').
Use the Program at your own risk and please make sure to check the pacman output before making changes to your System.

This Script under GPL3 License https://github.com/LeSnake04/pacman-extra-tools/blob/main/LICENSE
Bug reports, contributions, and feature requests welcome at https://github.com/LeSnake04/pacman-extra-tools
$TPUTRESET"	
}

info() {
echo "${INFOTPUT}After having to search for many pacman hidden functions myself, i decided to help others by giving them by giving them an easy way to use the functions i found. :)
If you dont trust my script and want to use the functions directly instead, you are welcome to copy the lines from here:

Autoremove:
sudo pacman -Rns \$(pacman -Qtdq)

Install:
sudo pacman -Sy \$(pacman -Ssq | grep SEARCH_TERM )

Remove:
sudo pacman -Rsu \$(pacman -Qq | grep SEARCH_TERM )$TPUTRESET"
}

askconfirmaction() {
   ac_question=$1
   #echo "q $ac_question"
   ac_pkgs=$2
   #echo "i $ac_pkgs"

   if [[ "$ac_pkgs" == "" ]]; then
      echo "${ERRORTPUT}No Packages found matching $argvar, Quitting ... ${ac_pkgs}${TPUTRESET}"
      exit 1
   fi

   printf "$USERINPUTTPUT$ac_question \n$ac_pkgs\n\n[Y/n]"
   read -r -n 1 ac_input
   printf "\n$TPUTRESET"
   case $ac_input in
      [nN])
         echo "${ERRORTPUT}Operation canceled by User, Quitting ...$TPUTRESET"
         exit 2
      ;;
      *)
         ac_output="1"
   esac
   return 0
}

ARGS=$(getopt -n "$0" \
 -o ahr:i:I \
 --long autoremove,help,remove:,install:,info \
 -- "$@")
echo "$ARGS"
# Parse ARGS into an array
IFS=' ' read -ra ARGS_ARRAY <<< "$ARGS"
# Detect if no command given
if [ "$ARGS" = " --" ]; then
   help
   exit 0
fi 
   
argvarpos=0
skip_next=false
for arg in $ARGS; do
   if [ $skip_next ]; then
      skip_next=false
      #echo "$arg already used as argument, skipping"
      continue
   fi
   
   # Get value of potential argument
   argvarpos=$((argvarpos + 1))
   echo "argvarpos: $argvarpos"
   argvar=${ARGS_ARRAY[$argvarpos]}
   echo "argvar: $argvar"
   echo "arg: $arg"
   
   case $arg in
      -a | --autoremove )
         echo "${INFOTPUT}Searching for unused Packages... $TPUTRESET"
         pkgs=$(pacman -Qtdq)

         # check if unused packages found
         if [[ "$pkgs" == "" ]]; then
            echo "$INFOTPUTBOLD Good news! No unused Packages found :)"
         else
            # Ask for confirmation from User
            printf "$USERINPUTTPUT Remove the Following packages? \n$INFOTPUT$pkgs\n\n$USERINPUTTPUT[Y/n]"
            read -r -n 1 ac_input
            printf "\n$TPUTRESET"
            case $ac_input in
               [nN])
                  echo "${ERRORTPUT}Operation canceled by User$TPUTRESET"
                  exit 2
               ;;
               *)
                  sudo pacman -Rsu $pkgs
            esac
         fi
      ;;
      -I | --info )
         info
         exit 0
      ;;
      # quit program at end of options
      --) 
         exit 0
      ;;
      -r | --remove )
         skip_next=true
         echo "${INFOTPUT}Searching for packages matching ${argvar} ...${TPUTRESET}"
         #FIXME packages somehow not listed, even thoug it works on terminal
         pkgs=$(pacman -Qq | grep "$argvar" )
         echo "pkgs: $pkgs"
         askconfirmaction "You are about to remove the following packages:" $pkgs
         if [ "$ac_output" == "1" ]; then
            sudo pacman -Rsu $pkgs
         fi
      ;;
      -i | --install )
         skip_next=true
         echo "${INFOTPUT}Searching for packages matching ${argvar} ...${TPUTRESET}"
         pacman -Ssq $argvar
         #FIXME packages somehow not listed, even thoug it works on Terminal
         pkgs=$(pacman -Ssq | grep $argvar )
         echo "pkgs: $pkgs"
         askconfirmaction "You are about to remove the following packages:" "$pkgs"
         if [ "$ac_output" == "1" ]; then
            sudo pacman -Sy $pkgs
         fi
      ;;
      *)
         help
   esac
done
